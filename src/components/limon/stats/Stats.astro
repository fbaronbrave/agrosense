---
import { t } from "i18next";

import Title from "@/components/shared/Title.astro";
import StatCard from "@/components/limon/stats/StatCard.astro";
import { cn } from "@/lib/utils";

interface Props {
  class?: string;
}
const { class: className } = Astro.props;
---

<section class={cn("space-y-10 stats-section", className)}>
  <Title
    title={t("limon.stats.title")}
    subtitle={String(t("limon.stats.subtitle"))}
    class="w-full mx-auto max-w-2xl [&>h2]:text-pretty"
  />

  <div
    class="max-w-3xl mx-auto lg:max-w-none grid sm:grid-cols-2 lg:grid-cols-4 gap-y-14 gap-4 stats-section-content"
  >
    <StatCard
      icon={t("limon.stats.items.0.icon")}
      title={t("limon.stats.items.0.title")}
      description="limon.stats.items.0.description"
    />
    <StatCard
      icon={t("limon.stats.items.1.icon")}
      title={t("limon.stats.items.1.title")}
      description="limon.stats.items.1.description"
    />
    <StatCard
      icon={t("limon.stats.items.2.icon")}
      title={t("limon.stats.items.2.title")}
      description="limon.stats.items.2.description"
    />
    <StatCard
      icon={t("limon.stats.items.3.icon")}
      title={t("limon.stats.items.3.title")}
      description="limon.stats.items.3.description"
    />
  </div>
</section>

<script>
  const section = document.querySelector(".stats-section");
  const content = section?.querySelector(".stats-section-content");
  const title = section?.querySelector(".title-section");

  if (section && content && title) {
    const children = content.children as unknown as HTMLElement[];
    Array.from(children).forEach((child, index) => {
      child.style.animationDelay = `${(index + 1) * 0.1}s`;
    });

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          title.classList.add("animate-fade-in-up");
          title.classList.remove("animate-fade-out-up");
          Array.from(children).forEach((child,) => {
            child.classList.add("animate-fade-in-up");
            child.classList.remove("animate-fade-out-up");
          });
        } else {
          title.classList.remove("animate-fade-in-up");
          title.classList.add("animate-fade-out-up");

          Array.from(children).forEach((child) => {
            child.classList.remove("animate-fade-in-up");
            child.classList.add("animate-fade-out-up");
          });
        }
      });
    }, { threshold: 0.25, rootMargin: '0px 0px -25% 0px' });

    observer.observe(section);
  }
</script>
